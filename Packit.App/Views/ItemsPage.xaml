<Page
    x:Class="Packit.App.Views.ItemsPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:app="using:Packit.App"
    xmlns:link="using:Packit.App.DataLinks"
    xmlns:i="using:Microsoft.Xaml.Interactivity"
    xmlns:ic="using:Microsoft.Xaml.Interactions.Core"
    xmlns:controls="using:Microsoft.Toolkit.Uwp.UI.Controls"
    xmlns:converters="using:Packit.App.Convertes"
    Style="{StaticResource PageStyle}"
    mc:Ignorable="d">

    <i:Interaction.Behaviors>
        <ic:EventTriggerBehavior EventName="Loaded">
            <ic:InvokeCommandAction Command="{x:Bind ViewModel.LoadedCommand}" />
        </ic:EventTriggerBehavior>
    </i:Interaction.Behaviors>

    <Page.Resources>
        <Style TargetType="Button">
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="VerticalAlignment" Value="Stretch"/>
        </Style>

        <converters:BooleanToTextConverter x:Key="TrueTotextConverter" TrueString="Done" FalseString="Edit items"/>
        <converters:BooleanToTextConverter x:Key="FalseTotextConverter" IsReversed="True" TrueString="Done" FalseString="Done"/>
        
    </Page.Resources>

    <Grid x:Name="ContentArea" Margin="{StaticResource MediumLeftRightMargin}">
        <Grid
            Background="{ThemeResource SystemControlPageBackgroundChromeLowBrush}">

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="4*"/>
            </Grid.ColumnDefinitions>

            <Grid.RowDefinitions>
                <RowDefinition Height="1.4*"/>
                <RowDefinition Height="30*"/>
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>

            <Grid Grid.Row="0">

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="20*"/>
                    <ColumnDefinition Width="10*"/>
                </Grid.ColumnDefinitions>

            </Grid>

            <controls:AdaptiveGridView
                Grid.Row="1"
                x:Name="gvItems"
                OneRowModeEnabled="False"
                SelectionMode="Single"
                DesiredWidth="300"
                IsItemClickEnabled="True"
                DataContext="{x:Bind ViewModel}"
                ItemTemplate="{StaticResource ItemGridTemplate}"
                ItemsSource="{x:Bind ViewModel.ItemImageLinks}">

                <GridView.ItemContainerStyle>
                    <Style TargetType="GridViewItem">
                        <Setter Property="Margin" Value="5"/>
                        <Setter Property="MaxWidth" Value="700"/>
                    </Style>
                </GridView.ItemContainerStyle>

                <GridView.ItemsPanel>
                    <ItemsPanelTemplate>
                        <ItemsWrapGrid x:Name="MaxItemsWrapGrid" 
                                        Orientation="Horizontal"
                                        MaximumRowsOrColumns="5"/>
                    </ItemsPanelTemplate>
                </GridView.ItemsPanel>

            </controls:AdaptiveGridView>

            <Grid Grid.Row="2" ColumnSpacing="5">
                
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="1*"/>
                </Grid.ColumnDefinitions>

                <Button Grid.Column="0" Command="{x:Bind ViewModel.AddCommand}" Margin="5,0,0,5" >
                    <StackPanel>
                        <SymbolIcon Symbol="Add"/>
                        <TextBlock>Add</TextBlock>
                    </StackPanel>
                </Button>
                <Button Grid.Column="1" Command="{x:Bind ViewModel.EditCommand}" CommandParameter="{Binding ElementName=gvItems, Path=SelectedItem}" Margin="0,0,0,5" >
                    <StackPanel>
                        <SymbolIcon Symbol="Edit"/>
                        <TextBlock Text="{x:Bind ViewModel.IsVisible, Mode=OneWay, Converter={StaticResource TrueTotextConverter}}"/>
                    </StackPanel>
                </Button>
                <Button Grid.Column="2" Command="{x:Bind ViewModel.DeleteCommand}" CommandParameter="{Binding ElementName=gvItems, Path=SelectedItem}" Margin="0,0,5,5" >
                    <StackPanel>
                        <SymbolIcon Symbol="Delete"/>
                        <TextBlock>Delete</TextBlock>
                    </StackPanel>
                </Button>
            </Grid>
            
        </Grid>
    </Grid>
</Page>
